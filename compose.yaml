########################### NETWORKS
networks:
  brunswick:
    name: brunswick
    external: true
    driver: bridge
    enable_ipv6: false
    driver_opts:
      parent: eth0
    
x-logging: &loki-logging
  driver: json-file
  options:
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

services:
########################### REVERSE PROXY / NETWORKING / SECURITY    
  # Traefik 3 - Reverse Proxy
  traefik:
    image: traefik:v3.2
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      brunswick:
    ports:
      - 89:80
      - 449:443
    command: # CLI arguments
      - --global.sendAnonymousUsage=true
      - --global.checknewversion=true
      - --api.dashboard=true
      - --api.insecure=false
      - --ping=true
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock # Disable for Socket Proxy. Enable otherwise.
      # - --providers.docker.endpoint=tcp://socket-proxy:2375 # Enable for Socket Proxy. Disable otherwise.
      - --providers.docker.exposedByDefault=true
      - --providers.docker.network=brunswick
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.traefik.address=:8080
      # Metrics Prometheus
      - --metrics=true
      - --metrics.prometheus=true
      - --metrics.addinternals=true
      - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
      - --metrics.prometheus.addServicesLabels=true
      # TLS
      # - --serversTransport.insecureSkipVerify=true
      - --certificatesresolvers.cloudflare.acme.tlschallenge=true
      # - --certificatesresolvers.cloudflare.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=$DOMAINNAME
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$DOMAINNAME
      - --certificatesresolvers.cloudflare.acme.email=$CF_EMAIL
      - --certificatesresolvers.cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      # - --entrypoints.websecure.forwardedHeaders.trustedIPs=$CLOUDFLARE_IPS,$LOCAL_IPS
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
      - --providers.file.watch=true # Only works on top level files in the rules folder
      # Logging
      - --log=true
      - --log.compress=true
      - --log.level=ERROR # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --log.maxSize=1
      - --log.maxAge=3
      - --log.maxbackups=3
      - --log.filepath=/logs/traefik.log
      - --accesslog=true
      - --accesslog.addinternals=true
      - --accesslog.filepath=/logs/access.log
      - --accessLog.filters.statusCodes=204-299,400-499,500-599
      - --accessLog.bufferingSize=60 # Configuring a buffer of 60 lines
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/certs/acme.json:/acme.json
      - $APPDIR/traefik/rules:/rules
      - $APPDIR/traefik/logs:/logs
    environment:
      - TZ=$TZ
      - CF_API_EMAIL=$SMTP_USER
      - CF_API_KEY=$CF_MASTERAPI
      - DOMAINNAME # Passing the domain name to use the variable in rules.
    labels:
      # HTTP Routers
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.rule=Host(`traefik.$DOMAINNAME`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
      # Middlewares
      - traefik.http.routers.dashboard.middlewares=oauth
      # Services - API
      - traefik.http.routers.dashboard.service=api@internal  
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # Google OAuth - Single Sign On using OAuth 2.0
  oauth:
    image: thomseddon/traefik-forward-auth:latest
    container_name: oauth
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    environment:
      - CONFIG=/config
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=true
      - AUTH_HOST=oauth.$DOMAINNAME
      - URL_PATH=/_oauth
      - LOG_LEVEL=warn # set to trace while testing bypass rules
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days, in seconds
      - DEFAULT_ACTION=auth
      - DEFAULT_PROVIDER=google
      - PROVIDERS_GOOGLE_CLIENT_ID=$GOOGLEID
      - PROVIDERS_GOOGLE_CLIENT_SECRET=$GOOGLESECRET
      - SECRET=$SECRET
      - WHITELIST=$WHITELIST
    labels:
      # HTTP Routers
      - traefik.http.routers.oauth.entrypoints=websecure
      - traefik.http.routers.oauth.rule=Host(`oauth.$DOMAINNAME`)
      # Middlewares
      - traefik.http.middlewares.oauth.forwardauth.address=http://oauth:4181
      - traefik.http.middlewares.oauth.forwardauth.authResponseHeaders=X-Forwarded-User
      # HTTP Services
      - traefik.http.services.oauth.loadbalancer.server.port=4181
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  # Cloudflare DDNS - Dynamic DNS Updater
  cloudflare:
    image: oznu/cloudflare-ddns
    container_name: cloudflare
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - API_KEY=$CF_API_KEY
      - ZONE=$DOMAINNAME
      - PROXIED=false
      - RRTYPE=A
      - DELETE_ON_STOP=false
      - DNS_SERVER=1.1.1.1
      - CRON="@daily"
    labels:
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# HOMEPAGE
  # Organizr - A dashboard for your server
  organizr:
    image: ghcr.io/organizr/organizr:latest
    container_name: organizr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 3001:80
    volumes:
      - $APPDIR/organizr:/config # Make sure your local config directory exists
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.organizr.entrypoints=websecure
      - traefik.http.routers.organizr.rule=Host(`$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.organizr.service=organizr
      - traefik.http.services.organizr.loadbalancer.server.port=80
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  ############################# INDEXERS
  # Prowlarr - Hydra and Jackett combined
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 9696:9696
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDIR/prowlarr:/config:rw
      - $DATADIR/torrents:/data/torrents:rw
      - $DATADIR/usenet:/data/usenet:rw
    labels:
      # HTTP Routers Auth Bypass (for NZB360)
      - traefik.http.routers.prowlarr-bypass.entrypoints=websecure
      - traefik.http.routers.prowlarr-bypass.rule=Host(`prowlarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$PROWLARR_API_KEY`) || Query(`apikey`, `$PROWLARR_API_KEY`))
      # HTTP Routers Auth
      - traefik.http.routers.prowlarr.entrypoints=websecure
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.prowlarr.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.prowlarr.service=prowlarr
      - traefik.http.routers.prowlarr-bypass.service=prowlarr
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  ############################# DOWNLOADERS
  # SABnzbd - nzb downloader
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 9998:8080
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - HAS_IPV6=false
    volumes:
      - $APPDIR/sabnzbd:/config
      - $DATADIR/usenet:/data/usenet:rw
    labels:
      # HTTP Routers Auth Bypass
      - traefik.http.routers.sabnzbd-bypass.entrypoints=websecure
      - traefik.http.routers.sabnzbd-bypass.rule=Host(`sabnzbd.$DOMAINNAME`) && (Header(`X-Api-Key`, `$SABNZBD_API_KEY`) || Query(`apikey`, `$SABNZBD_API_KEY`))
      # HTTP Routers Auth
      - traefik.http.routers.sabnzbd.entrypoints=websecure
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.sabnzbd.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.sabnzbd.service=sabnzbd
      - traefik.http.routers.sabnzbd-bypass.service=sabnzbd
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # qbittorrent - torrent downloader with VPN
  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    logging: *loki-logging
    hostname: qbittorrent.internal
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
    devices:
      - /dev/net/tun:/dev/net/tun # Optional, if not on e.g. Syno NAS
    networks:
      brunswick:
    ports:
      - 9997:8080
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - WEBUI_PORTS=8080/tcp,8080/udp
      - VPN_ENABLED=true
      - VPN_CONF=wg0-fix
      - VPN_PROVIDER=generic
      - VPN_LAN_NETWORK=192.168.1.0/24
      - VPN_LAN_LEAK_ENABLED=false
      - VPN_AUTO_PORT_FORWARD=51007
      - VPN_KEEP_LOCAL_DNS=false
      - VPN_FIREWALL_TYPE=auto
      - VPN_HEALTHCHECK_ENABLED=true
      - PRIVOXY_ENABLED=false
      - UNBOUND_ENABLED=false
      - QBITTORRENTAPI_DO_NOT_VERIFY_WEBUI_CERTIFICATE=1
    volumes:
      - $APPDIR/qbittorrent:/config:rw
      - $DATADIR/torrents:/data/torrents:rw
      - $APPDIR/qbittorrent/mam/cookies.sh:/etc/cont-init.d/99-mam-cookies
    labels:
      # HTTP Routers
      - traefik.http.routers.qbittorrent.entrypoints=websecure
      - traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.qbittorrent.service=qbittorrent
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  # qbit_manage - torrent client management
  qbit_manage:
    image: bobokun/qbit_manage
    container_name: qbitmanage
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    depends_on:
      qbittorrent:
        condition: service_started
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - VERIFY_WEBUI_CERTIFICATE=False
    volumes:
      - $APPDIR/qbitmanage:/config:rw
      - $APPDIR/qbittorrent/:/qbittorrent/:ro
      - $DATADIR/torrents:/data/torrents:rw # same as qbittorrent download dir
    labels:
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # autobrr - torrent RSS downloader
  autobrr:
    image: ghcr.io/autobrr/autobrr:latest
    container_name: autobrr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 7474:7474
    user: $PUID:$PGID
    volumes:
      - $APPDIR/autobrr:/config
    labels:
      # HTTP Routers Auth Bypass
      - traefik.http.routers.autobrr-bypass.entrypoints=websecure
      - traefik.http.routers.autobrr-bypass.rule=Host(`autobrr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$AUTOBRR_API_KEY`) || Query(`apikey`, `$AUTOBRR_API_KEY`))
      # HTTP Routers Auth
      - traefik.http.routers.autobrr.entrypoints=websecure
      - traefik.http.routers.autobrr.rule=Host(`autobrr.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.autobrr.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.autobrr-bypass.service=autobrr
      - traefik.http.routers.autobrr.service=autobrr
      - traefik.http.services.autobrr.loadbalancer.server.port=7474
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # omegabrr - auto-generate filters for autobrr based on *arr subscriptions
  omegabrr:
    image: ghcr.io/autobrr/omegabrr:latest
    container_name: omegabrr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    depends_on:
      sonarr:
        condition: service_started
      radarr:
        condition: service_started
    user: $PUID:$PGID
    environment:
      - TZ=$TZ
    volumes:
      - $APPDIR/omegabrr:/config
    labels:
      # HTTP Routers
      - traefik.http.routers.omegabrr.entrypoints=websecure
      # HTTP Services
      - traefik.http.routers.omegabrr.service=omegabrr
      - traefik.http.services.omegabrr.loadbalancer.server.port=7441
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# MEDIA SEARCH/INDEX
  # Radarr - Movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 7878:7878
    depends_on:
      sabnzbd:
        condition: service_started
      qbittorrent:
        condition: service_started
      prowlarr:
        condition: service_started
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDIR/radarr:/config
      - $DATADIR:/data
    labels:
      # HTTP Routers Auth Bypass
      - traefik.http.routers.radarr-bypass.entrypoints=websecure
      - traefik.http.routers.radarr-bypass.rule=Host(`radarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$RADARR_API_KEY`) || Query(`apikey`, `$RADARR_API_KEY`))
      # HTTP Routers Auth
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.rule=Host(`radarr.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.radarr.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.routers.radarr-bypass.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  # Sonarr - TV
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 8989:8989
    depends_on:
      sabnzbd:
        condition: service_started
      qbittorrent:
        condition: service_started
      prowlarr:
        condition: service_started
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDIR/sonarr:/config
      - $DATADIR:/data
    labels:
      # HTTP Routers Auth Bypass
      - traefik.http.routers.sonarr-bypass.entrypoints=websecure
      - traefik.http.routers.sonarr-bypass.rule=Host(`sonarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$SONARR_API_KEY`) || Query(`apikey`, `$SONARR_API_KEY`))
      # HTTP Routers Auth
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.rule=Host(`sonarr.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.sonarr.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.routers.sonarr-bypass.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  # Tdarr - Video conversion
  tdarr:
    image: haveagitgat/tdarr:latest
    container_name: tdarr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 8265:8265
    devices: # optional (used if Syno has Intel CPU, for HW transcoding)
      - /dev/dri:/dev/dri
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
      - nodeID=TdarrNode
      - THREADS_WORKER_INIT_TIMEOUT=200000
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - $APPDIR:/app/server
      - $APPDIR/Tdarr/Configs:/app/configs
      - $APPDIR/Tdarr/Logs:/app/logs
      - $DATADIR/media/Transcode:/temp
      - $DATADIR:/data
    labels:
      # HTTP Routers Auth Bypass
      - traefik.http.routers.tdarr-bypass.entrypoints=websecure
      - traefik.http.routers.tdarr-bypass.rule=Host(`tdarr.$DOMAINNAME`) && (Header(`X-Api-Key`, `$TDARR_API_KEY`) || Query(`apikey`, `$TDARR_API_KEY`))
      # HTTP Routers Auth
      - traefik.http.routers.tdarr.entrypoints=websecure
      - traefik.http.routers.tdarr.rule=Host(`tdarr.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.tdarr.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.tdarr-bypass.service=tdarr
      - traefik.http.routers.tdarr.service=tdarr
      - traefik.http.services.tdarr.loadbalancer.server.port=8265
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# HOME THEATRE
  # Plex - Media Player
  plex:  
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 32400:32400
    devices: # optional (used if Syno has Intel CPU, for HW transcoding)
      - /dev/dri:/dev/dri
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - VERSION=docker
      # - PLEX_CLAIM= #only needed when first claiming server
    volumes:
      - ${APPDIR}/plex:/config:rw
      - ${DATADIR}/media:/data/media:rw
      - ${DATADIR}/media:/transcode
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.plex.entrypoints=websecure
      - traefik.http.routers.plex.rule=Host(`plex.$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.plex.service=plex
      - traefik.http.services.plex.loadbalancer.server.port=32400
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# PLEX MONITORING/MANAGEMENT
  # Tautulli - Media play and user monitoring
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 8181:8181
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - DEBUG=no
    volumes:
      - $APPDIR/tautulli:/config:rw
      - $APPDIR/plex:/plex:ro
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.tautulli.entrypoints=websecure
      - traefik.http.routers.tautulli.rule=Host(`tautulli.$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.tautulli.service=tautulli
      - traefik.http.services.tautulli.loadbalancer.server.port=8181
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  # Overseer - Allows Plex users to request media
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 5055:5055
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $APPDIR/overseerr:/config
      - $DATADIR/media:/data/media
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.overseerr.entrypoints=websecure
      - traefik.http.routers.overseerr.rule=Host(`overseerr.$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.overseerr.service=overseerr
      - traefik.http.services.overseerr.loadbalancer.server.port=5055
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  ############################# INTERNET VIDEO DOWNLOADER
  # Metube – Self-hosted YT downloader with GUI
  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 8084:8081
    environment:
      - UID=$PUID
      - GID=$PGID
      - TZ=$TZ
      - DELETE_FILE_ON_TRASHCAN=true
      - OUTPUT_TEMPLATE=$METUBE
    volumes:
      - $DATADIR/media/youtube:/downloads
      - $DATADIR/media/youtube/cookies:/cookies
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.metube.entrypoints=websecure
      - traefik.http.routers.metube.rule=Host(`metube.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.metube.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.metube.service=metube
      - traefik.http.services.metube.loadbalancer.server.port=8081
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# BOOK LIBRARY MANAGEMENT
  # Calibre – Content server
  calibre:
    image: lscr.io/linuxserver/calibre:latest
    container_name: calibre
    restart: unless-stopped
    logging: *loki-logging
    security_opt:
      - seccomp:unconfined
    networks:
      brunswick:
    ports:
      - 8088:8080 #Calibre desktop gui
    devices: # optional (used if Syno has Intel CPU, for HW transcoding)
      - /dev/dri:/dev/dri
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - TITLE=BrunswickBooks
      - CALIBRE_CACHE_DIRECTORY=/cache
      - CLI_ARGS="--trusted-ips 192.168.1.0/24"
      - DRINODE=/dev/dri/renderD128
    volumes:
      - $APPDIR/calibre:/config
      - $APPDIR/calibre/cache:/cache
      - $DATADIR:/data
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.calibre.entrypoints=websecure
      - traefik.http.routers.calibre.rule=Host(`calibre.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.calibre.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.calibre.service=calibre
      - traefik.http.services.calibre.loadbalancer.server.port=8080
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # Calibre Web Automated - fork of Calibre-web that includes auto format conversion
  calibreweb:
    image: crocodilestick/calibre-web-automated:latest
    container_name: books
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 8083:8083
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional, seems necessary for Google oAuth
      - OAUTHLIB_INSECURE_TRANSPORT=1 #insecure, seems necessary for Google oAuth
    volumes:
      - $APPDIR/books:/config
      - $DATADIR/imports:/cwa-book-ingest
      - $DATADIR/media/books:/calibre-library
      - $DATADIR/media/books:/books
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.books.entrypoints=websecure
      - traefik.http.routers.books.rule=Host(`books.$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.books.service=books
      - traefik.http.services.books.loadbalancer.server.port=8083
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# SYSTEM MANAGEMENT/MONITORING
  # Prometheus - metrics
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    logging: *loki-logging
    user: "0:0"
    depends_on:
      - traefik
    networks:
      brunswick:
    volumes:
      - $APPDIR/traefik/prometheus/settings/:/etc/prometheus/
      - $APPDIR/traefik/prometheus/data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.size=256MB
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.rule=Host(`prometheus.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.prometheus.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.prometheus.service=prometheus
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # Grafana - metrics visualised
  grafana:
    hostname: grafana
    container_name: grafana
    image: grafana/grafana:10.0.5
    restart: unless-stopped
    logging: *loki-logging
    user: "0:0"
    depends_on:
      - traefik
      - prometheus
    networks:
      brunswick:
    volumes:
      - $APPDIR/traefik/grafana/data:/var/lib/grafana
      - $APPDIR/traefik/grafana/settings:/etc/grafana/provisioning
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.rule=Host(`grafana.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.grafana.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.grafana.service=grafana
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # Loki - metrics gathering
  loki:
    hostname: loki
    container_name: loki
    image: grafana/loki:2.9.0
    command: -config.file=/mnt/config/loki-config.yml
    restart: unless-stopped
    logging: *loki-logging
    user: "0:0"
    networks:
      brunswick:
    ports:
      - 127.0.0.1:3100:3100
    volumes:
      - $APPDIR/traefik/loki/data:/loki
      - $APPDIR/traefik/loki/settings/loki-config.yml:/mnt/config/loki-config.yml
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.loki.entrypoints=websecure
      - traefik.http.routers.loki.rule=Host(`loki.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.loki.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.loki.service=loki
      - traefik.http.services.loki.loadbalancer.server.port=3100
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  # promtail - docker system metrics
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    hostname: promtail
    command: -config.file /mnt/config/promtail-config.yaml
    restart: unless-stopped
    logging: *loki-logging
    user: "0:0"
    networks:
      brunswick:
    volumes:
      # logs for linux host only
      - /var/log:/host/log
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /volume1/@docker/containers:/host/containers
      - $APPDIR/traefik/promtail/settings/promtail-config.yaml:/mnt/config/promtail-config.yaml
    labels:
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  nodeexporter:
    image: prom/node-exporter:v1.6.1
    container_name: nodeexporter
    hostname: nodeexporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    expose:
      - 9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    labels:
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
      
  # Notifiarr - update ARR profiles
  notifiarr:
    image: golift/notifiarr:latest
    container_name: notifiarr
    hostname: notifiarr #must be set, can be anything
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    ports:
      - 5454:5454
    environment:
      - TZ=$TZ
      - DN_API_KEY=$NOTIFIARR
      - USER=docker
    volumes:
      - $APPDIR/notifiarr:/config
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.notifiarr.entrypoints=websecure
      - traefik.http.routers.notifiarr.rule=Host(`notifiarr.$DOMAINNAME`)
      # Middlewares
      - traefik.http.routers.notifiarr.middlewares=oauth
      # HTTP Services
      - traefik.http.routers.notifiarr.service=notifiarr
      - traefik.http.services.notifiarr.loadbalancer.server.port=5454
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO

  ############################# SECURITY/PASSWORD MANAGEMENT
  # Vaultwarden - Locally-hosted Bitwarden
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    logging: *loki-logging
    networks:
      brunswick:
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - DOMAIN=https://vaultwarden.$DOMAINNAME
      - PUSH_ENABLED=true
      - PUSH_INSTALLATION_ID=$PUSH_INSTALLATION_ID
      - PUSH_INSTALLATION_KEY=$PUSH_INSTALLATION_KEY
      - LOG_LEVEL=error
      - EXTENDED_LOGGING=false
      - SMTP_HOST=smtp.gmail.com
      - SMTP_FROM=vaultwarden@$DOMAINNAME
      - SMTP_PORT=587
      - SMTP_SECURITY=starttls
      - SMTP_USERNAME=$SMTP_USER
      - SMTP_PASSWORD=$SMTP_PASS
    volumes:
      - $APPDIR/vaultwarden:/data
    labels:
      # HTTP Routers Auth
      - traefik.http.routers.vaultwarden.entrypoints=websecure
      - traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.$DOMAINNAME`)
      # HTTP Services
      - traefik.http.routers.vaultwarden.service=vaultwarden
      - traefik.http.services.vaultwarden.loadbalancer.server.port=80
      ## Updating and notifications
      - org.hotio.pullio.notify=true
      - org.hotio.pullio.update=true
      - org.hotio.pullio.discord.webhook=$DISCORD
      - org.hotio.pullio.generic.webhook=$PULLIO
